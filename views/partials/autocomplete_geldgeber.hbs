<script type="text/javascript">
    const jsAutoComplete_{{Selector}} = new autoComplete({
        placeHolder: "Tippen sie...",
        selector: "#{{Selector}}",
        data: { 
			/**
			*
			* @return {string[]}
			*/
            src: async () => {
				let current_Inhaber = selection_{{Selector_Inhaber}} ? selection_{{Selector_Inhaber}} : "";
				if (current_Inhaber === "") {
					return [];
				}
				try {
					const results = await fetch("/inhaber/"+encodeURIComponent(current_Inhaber)+"/geldanlagen");
					if (results.status === 404) {
						return [];
					} 
					const data = await results.json();
				return data;
				} catch (err) {
					console.error(err);
					return err;
				}
			},
			keys: ["Name"],
            cache: false, 
        },
        debounce: 100,
        resultsList: {
            class: "autocomplete_results",
            maxResults: 5,
        },
        events: {
            input: {
                /** 
                    @param {Event} event
                */
                selection: async (event) => {
					if (!selection_{{Selector_Inhaber}}) {
						jsAutoComplete_{{Selector}}.input.value = "Erst Inhaber ausw채hlen";
						return
					}
                    let selection_{{Selector}} = event.detail.selection.value;
                    jsAutoComplete_{{Selector}}.input.value = selection_{{Selector}}[jsAutoComplete_{{Selector}}.data.keys[0]];

					const storeObj = jsAutoComplete_{{Selector}}.data.store
					let values = [];
					storeObj.forEach((obj) => {
						values.push(obj.Name);
					});
					
					if (!values.includes(selection_{{Selector}}[jsAutoComplete_{{Selector}}.data.keys[0]])) {
                        // F체ge neuen Inhaber ein, er kann nun gesucht werden. 
                        const bd = {
                            Name: selection_{{Selector}},
                        }
                        // F체ge neuen Inhaber ein, er kann nun gesucht werden.
                        let res = await fetch("/inhaber/"+encodeURIComponent(selection_{{Selector_Inhaber}})+"/geldanlagen", {
                            method: "POST",
                            headers: { "Content-Type": "application/json" },
                            body: JSON.stringify(bd),
                        });
                    }
                },
                /** 
                    @param {Event} event
                */
                results: (event) => {
                    let matchFound = false
                    event.detail.matches.forEach((matchObj) => {
                        let {match} = matchObj
                        let word = match.replace("<mark>", "");
                        word = word.replace("</mark>", "");
                        if (event.detail.query === word) {
                            matchFound = true
                        }
                    })
                    if (!matchFound) {
                        let firstMatch = {match: "Neue Geldanlage \""+event.detail.query+"\" erstellen", value: event.detail.query};
                        event.detail.matches.unshift(firstMatch);
                        //Immer an erster Stelle den Vorschlag einf체gen, die aktuelle Query zu verwenden
                        event.detail.results.unshift(firstMatch);
                    }
                }
            }
        }
    });
</script>